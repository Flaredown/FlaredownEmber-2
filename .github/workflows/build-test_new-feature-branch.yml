name: build & test new feature branch
on:
  push:
    branches:
      - '**'
      - '!master'
      - '!develop'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container: 'ubuntu:18.04'
    defaults:
      run:
        working-directory: backend

    services:
      mongo:
        image: mongo:3.0.10
        ports:
          - 27017:27017

      postgresql:
        image: postgres:9.4
        env:
          # Password is required otherwise container won't start
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: salvatore
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:3.2.6
        ports:
          - 6379:6379

    env:
      PG_DATABASE_USERNAME: salvatore
      PG_DATABASE_PASSWORD: postgres
      PG_DATABASE_HOST: postgresql
      PG_DATABASE_PORT: 5432
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432

    steps:
      - uses: actions/checkout@v2

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install libssl1.0 postgresql-client libyaml

      - uses: actions/setup-node@v2
        with:
          node-version: '6.10.3'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.3.1'
        env:
          ImageOS: ubuntu18

      - name: Debugging DBs
        run: |
          ls -la /var/run/postgresql/
          ls -la /var/run/
          ls -la /tmp/
          docker container ls --all


      - name: Configure Ruby
        run: 'echo "gem: --no-ri --no-rdoc" > ~/.gemrc'

      - name: Install Frontend Dependencies
        run: |
          npm install -g
          npm install -g bower
          bower install
        working-directory: frontend

      - name: Install Backend Dependencies
        run: bundle install --without production -j5

      - name: Build & Run
        run: |
          cp env-example .env
          bundle exec rake app:setup
          rake run

      - name: Test The Build
        run: echo "TODO"

  create-pull-request:
    needs: build-and-test
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "develop"
          pr_title: "Pulling ${{ github.ref }} into develop"
          pr_body: ":crown: *Automated Pull Request After Feature Branch Passed All Tests*"
          github_token: ${{ secrets.GITHUB_TOKEN }}
